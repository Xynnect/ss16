/**
 *
 * ss16 - a self-centered, fresh attempt at (user)styling 4chan
 *
 * created on: December 10th, 2016
 * last modified: March 9th, 2017
 * 4chan X version: ccd0 1.13.8.4 / https://github.com/ccd0/4chan-x
 * created by: @saxamaphone69
 * coding style: https://github.com/necolas/idiomatic-css
 *
 * in an attempt to make the style as user-friendly as possible,
 * i will comment most of the css to explain what it all does
 *
 */

/**
 * this userstyle utilises a lot of best practices
 * and sensible defaults inspired from a variety of
 * stylish and modern web frameworks and resources, mainly:
 * https://github.com/twbs/bootstrap
 */

/**
 * first thing we do, is we use web fonts from google!
 * this is so users aren't required to download fonts prior.
 * and of course, if you don't want to or don't like it,
 * delete or change it accordingly. we use roboto, roboto mono,
 * and material icons
 */

@import url('https://fonts.googleapis.com/css?family=Roboto:400,500|Roboto+Mono|Material+Icons');

/**
 * because grotesque fonts are all the rage, we include circular
 * as a data URI. not sure if `font-display` even works in userstyles
 * but https://css-tricks.com/font-display-masses/ explains it
 */

@font-face {
  font-family: circularMedium;
  src: url('data:font/woff2;base64,') format('woff2');
  font-display: swap;
}

@font-face {
  font-family: circularBook;
  src: url('data:font/woff2;base64,') format('woff2');
  font-display: swap;
}

/**
 * we also finally have css variables/custom properties!
 * these are mainly used to manage colours, which are based off
 * google's material design guidelines:
 * https://material.io/guidelines/style/color.html
 * https://www.materialui.co/colors
 */

:root {
  --very-light-primary: #e1bee7;
  --light-primary: #ba68c8;
  --base-primary: #9c27b0;
  --dark-primary: #7b1fa2;
  --light-accent: #ffd54f;
  --base-accent: #ffc107;
  --dark-accent: #ffa000;
  --base-black: #212121;
  --dark-grey: #616161;
  --base-grey: #9e9e9e;
  --light-grey: #e0e0e0;
  --base-white: #fefefe;
  --light-red: #e57373;
  --base-red: #f44336;
  --dark-red: #d32f2f;
  --light-blue: #64b5f6;
  --base-blue: #2196f3;
  --dark-blue: #1976d2;
  --light-green: #81c784;
  --base-green: #4caf50;
  --dark-green: #388e3c;
  --light-orange: #ffb74d;
  --base-orange: #ff9800;
  --dark-orange: #f57c00;
  --light-purple: #ba68c8;
  --base-purple: #9c27b0;
  --dark-purple: #7b1fa2;
  --default-depth: .5rem .5rem 0 0 rgba(33, 33, 33, .5);
}

/**
 * to change colour depending on what board you're on, follow this
 * general outline:
 * .board_XXX {
 * --base-primary: red;
 * --base-accent: green;
 * }
 */

/**
 * use `!important` here so it doesn't pollute other declarations.
 * hides ads, but maybe you should buy a 4chan pass, friend :^)
 * and while we're here, ensure [hidden] elements are hidden
 */

.center,
.arc-ads,
[hidden] {
  display: none !important;
}

/**
 * then we get rid of all the other stuff that isn't needed
 *
 * 1) elements that are intended for the mobile version
 * 2) luckily a bunch of elements have `.desktop`, and we
 *    don't actually need most of them
 * 3) all horizontal rules, except for the unread line one
 * 4) ccd0 caters for retards who can't manage to start a thread
 * 5) hide the original post form (use the qr)
 * 6) hide checkboxes from posts (use the menu)
 * 7) ad pleas
 * 8) the '>>' to the left on posts when reply hiding isn't on
 */

.mobile,
.desktop:not(#bannerCnt):not(.postInfo):not(.postNum):not(.summary):not(.pagelist):not(#boardNavDesktopFoot),
hr:not(#unread-line),
.qr-link-container,
.postForm,
.postInfo > input,
.ad-plea,
.sideArrows,
#navbotright {
  display: none;
}

/**
 * 1) changes the default font family
 * 2) give everything some SPACE
 * 3) make fonts look a bit nicer
 * 4) force the page to always have a scrollbar
 * 5) might not actually work, but make long words hyphenate
 */

:root {
  font-family: roboto, sans-serif;
  font-size: 1rem;
  line-height: 1.5;
  color: var(--base-black);
  background-color: var(--light-grey);
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  text-rendering: optimizeLegibility;
  overflow-y: scroll;
  box-sizing: border-box;
  word-wrap: break-word;
  overflow-wrap: break-word;
  -webkit-hyphens: auto;
  -moz-hyphens: auto;
  hyphens: auto;
}

/**
 * http://www.paulirish.com/2012/box-sizing-border-box-ftw/
 * along with
 * https://css-tricks.com/inheriting-box-sizing-probably-slightly-better-best-practice/
 */

*,
*::before,
*::after {
  box-sizing: inherit;
}

/**
 * set our own text selection background colour.
 * there's two separate declarations because:
 * https://bugzilla.mozilla.org/show_bug.cgi?id=509958
 */

::-moz-selection {
  background-color: var(--very-light-primary);
}

::selection {
  background-color: var(--very-light-primary);
}

/**
 * it is bad UX to give focused elements no visual feedback if they
 * are tabbed (not to mention against the law), but i HIGHLY doubt
 * someone with visual impairments would be using a userstyle
 */

:focus {
  outline: 0;
}

/**
 * remove the deafult margin from blockquotes and the body
 */

blockquote,
body {
  margin: 0;
}

/**
 * remove underlines from all `a` elements
 * opted for `inherit` here since very few `a` elements are the same colour
 */

a {
  color: inherit;
  text-decoration: none;
  transition: color .25s;
}

/**
 * except from linkified links (has an affect on spoilers)
 */

.linkify {
  border-bottom: 1px solid;
}

/**
 * address font weight set incorrectly in browsers, but while we're
 * at it, set it for other elements we want bolded
 */

b,
strong,
th,
legend,
h1,
h2,
h3,
h4,
h5,
h6,
.globalMessage,
.subject,
.name {
  font-weight: 500;
}

/**
 * if there is ever an inline style that makes something bold,
 * we override it with an `!important` (potentially expensive?)
 */

[style*='weight:bo'] {
  font-weight: 500 !important;
}

/**
 * fix some weird stuff that happens with these elements
 * in all browsers, and while we're here, set tripcodes to
 * use a monospace font too
 */

code,
kbd,
pre,
.postertrip {
  font-family: roboto mono, monospace;
  font-size: 1em;
}

/**
 * fix spacing of media objects
 */

audio,
embed,
iframe,
img,
video {
  vertical-align: middle;
  height: auto;
  max-width: 100%;
}

iframe {
  border: 0;
}

/**
 * normalise progress vertical alignment
 */

progress {
  vertical-align: baseline;
}

table {
  border-collapse: collapse;
  border-spacing: 0;
}

/**
 * form elements
 * first, make sure these elements use the set font
 * and remove any default margins they might have
 */

button,
input,
select,
textarea {
  font: inherit;
  margin: 0;
}

/**
 * remove the inner border and padding in firefox
 */

::-moz-focus-inner {
  border-style: none;
  padding: 0;
}

/**
 * restore the focus styles unset by the previous rule.
 */

:-moz-focusring {
  outline: 1px dotted ButtonText;
}

/**
 * correct the cursor style of increment and decrement buttons in chrome
 */

::-webkit-inner-spin-button,
::-webkit-outer-spin-button {
  height: auto;
}

/**
 * correct search inputs in chrome
 */

[type='search'] {
  -webkit-appearance: textfield;
  outline-offset: -2px;
}

/**
 * remove inner padding and cancel buttons in chrome on macs
 */

::-webkit-search-cancel-button,
::-webkit-search-decoration {
  -webkit-appearance: none;
}

/**
 * change cursor to make certain elements look clickable
 */

button,
[type='button'],
[type='submit'],
label,
.hand {
  cursor: pointer;
}

/**
 * but not if they are disabled
 */

[disabled] {
  cursor: not-allowed;
}

/**
 * remove the default fieldset styles
 */

fieldset {
  padding: 0;
  border: 0;
  margin: 0;
}

legend {
  padding: 0;
}

/**
 * allow for vertical-only resizing of textareas
 */

textarea {
  resize: vertical;
}

/**
 * improve hr appearance
 */

hr {
  display: block;
  height: 1px;
  padding: 0;
  border: 0;
  border-top: 1px solid;
  margin: 1rem 0;
}

#unread-line {
  border-top-color: var(--base-green);
}

/**
 * make placeholder text consistent across browsers
 * https://css-tricks.com/almanac/selectors/p/placeholder/
 * http://caniuse.com/#feat=css-placeholder
 */

::-webkit-input-placeholder {
  color: var(--base-grey);
}

::placeholder {
  opacity: 1;
  color: var(--base-grey);
}

/**
 * [spoiler] tags
 */

s {
  text-decoration: none;
  color: var(--base-black);
  background-color: var(--base-black);
  transition: color .25s;
}

s:hover {
  color: var(--base-white);
}

/**
 * [code] tags
 */

.prettyprint {
  font-size: .75rem;
  -webkit-font-smoothing: subpixel-antialiased;
  color: var(--light-grey);
  background-color: var(--base-black);
  white-space: pre-wrap;
  word-spacing: normal;
  word-break: normal;
  -moz-tab-size: 4;
  tab-size: 4;
  -webkit-hyphens: none;
  -moz-hyphens: none;
  hyphens: none;
  overflow: auto;
  padding: .5rem;
  margin: 0;
  display: inline-block;
  vertical-align: middle;
  max-width: 100%;
}

/**
 * https://jmblog.github.io/color-themes-for-google-code-prettify/
 */

.prettyprinted .str {
  color: #2a9292;
}

.prettyprinted .kwd {
  color: #955ae7;
}

.prettyprinted .com {
  color: #655f6d;
}

.prettyprinted .typ,
.prettyprinted .atn,
.prettyprinted .fun {
  color: #576ddb;
}

.prettyprinted .lit,
.prettyprinted .dec {
  color: #aa573c;
}

.prettyprinted .pun,
.prettyprinted .opn,
.prettyprinted .clo {
  color: #efecf4;
}

.prettyprinted .tag,
.prettyprinted .var {
  color: #be4678;
}

.prettyprinted .atv {
  color: #398bc6;
}

/**
 * icon styling and setting
 */

.menu-button {
  position: relative;
  cursor: pointer;
}

.fa::after,
.menu-button::after,
.hide-announcement::after,
.n-pu::after,
#navlinks a::after,
.navLinks::before,
#index-rev::after,
.pagelist .prev a::after,
.pagelist .next a::after,
.watch-thread-link::after,
.has-submenu::after,
.entry input[type='checkbox']::after,
.checkbox-letter::after,
.qr-preview-spoiler::after,
#add-post::after,
.gal-start::after,
.gal-stop::after,
.gal-close::after,
.gal-prev::after,
.gal-next::after,
.close::after,
.jump::after,
.file--video:not(.expanded-image) > .post > .file > .fileThumb::after,
.file--gif:not(.expanded-image) > .post > .file > .fileThumb::after {
  font-family: material icons;
  font-weight: normal;
  font-style: normal;
  font-size: 1.5rem;
  display: inline-block;
  line-height: 1;
  text-transform: none;
  letter-spacing: normal;
  word-wrap: normal;
  white-space: nowrap;
  direction: ltr;
  -webkit-font-smoothing: antialiased;
  text-rendering: optimizeLegibility;
  -moz-osx-font-smoothing: grayscale;
  font-feature-settings: 'liga';
  /* only additional declaration to this style */
  color: inherit;
}

.fa-spin::after {
  animation: spin 2s infinite linear;
}

@keyframes spin {
  0% {
    transform: rotate(0);
  }

  100% {
    transform: rotate(359deg);
  }
}

.menu-button::after {
  content: 'more_vert';
}

.fa-eye::after {
  content: 'remove_red_eye';
}

.fa-expand::after {
  content: 'fullscreen';
}

.fa-compress::after {
  content: 'fullscreen_exit';
}

.fa-picture-o::after {
  content: 'photo';
}

.fa-comment-o::after {
  content: 'comment';
}

.fa-refresh::after {
  content: 'refresh';
}

.fa-wrench::after {
  content: 'settings';
}

.fa-minus-square::after,
.fa-minus-square-o::after {
  content: 'remove_circle';
}

.fa-plus-square::after,
.fa-plus-square-o::after {
  content: 'add_circle';
}

.fa-times::after,
.hide-announcement::after,
.close::after,
.gal-close::after {
  content: 'close';
}

#navlinks a:first-of-type::after {
  content: 'keyboard_arrow_up';
}

#navlinks a:last-of-type::after {
  content: 'keyboard_arrow_down';
}

.pagelist .prev a::after {
  content: 'arrow_back';
}

.pagelist .next a::after {
  content: 'arrow_forward';
}

#qr-oekaki-button .fa-edit::after {
  content: 'format_paint';
}

#qr-filerm .fa-times-circle::after {
  content: 'cancel';
}

#url-button .fa-link::after {
  content: 'link';
}

#paste-area::after {
  content: 'content_paste';
}

#custom-cooldown-button .fa-clock-o::after {
  content: 'timer';
}

#dump-button .fa-plus-square::after {
  content: 'add_box';
}

.qr-preview .fa-times-circle::after {
  content: 'cancel';
}

.qr-preview-spoiler::after,
.checkbox-letter::after {
  content: 'strikethrough_s';
}

#add-post::after {
  content: 'add_box';
}

.gal-start::after {
  content: 'play_arrow';
}

.gal-stop::after {
  content: 'stop';
}

.gal-prev::after {
  content: 'keyboard_arrow_left';
}

.gal-next::after {
  content: 'keyboard_arrow_right';
}

.jump::after {
  content: 'subdirectory_arrow_right';
}

.file--video:not(.expanded-image) > .post > .file > .fileThumb::after {
  content: 'play_circle_outline';
}

.file--gif:not(.expanded-image) > .post > .file > .fileThumb::after {
  content: 'gif';
}

.fa-download::after {
  content: 'file_download';
}

.n-pu::after {
  content: 'person';
  font-size: 1rem;
  color: var(--base-green);
  line-height: inherit;
  vertical-align: bottom;
}

/**
 * 4chan specific css, ordered as it appears on the page:
 * §A1 - board banner
 * §A2 - blotter
 * §A3 - announcements
 * §A4 - index navigation
 * §A5 - index
 * §A6 - page list
 * §A7 - bottom navigation
 * §A8 - copyright and footer
 */

/**
 * if there is ever an inline style that makes something red,
 * we override it with an `!important` (potentially expensive)
 */

[color='red'],
[style*='color:red'],
[style*='color: red'] {
  color: var(--base-red) !important;
}

.boardBanner {
  font-family: circularMedium;
  color: var(--base-white);
  padding: 0 1.5rem;
  height: 30rem;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  user-select: none;
  position: relative;
  overflow: hidden;
  text-align: center;
}

/**
 * in the event that you unironically enjoy the banners, and
 * didn't block them like i requested, i will still make them look
 * semi-decent. if you don't enjoy the pixelated look, change
 * `image-rendering` with a value you'd prefer:
 * https://developer.mozilla.org/en/docs/Web/CSS/image-rendering
 */

#bannerCnt > img {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 30rem;
  image-rendering: pixelated;
}

.boardTitle {
  /*
	font-size: calc(100% + 5vw);
	*/
  font-size: calc(100% + 5vw);
  color: var(--base-white);
  text-transform: lowercase;
  /*
	background-image: linear-gradient(to right, #FF4081, #3D5AFE);
	-webkit-background-clip: text;
	-webkit-text-fill-color: transparent;
	*/
  text-shadow: 1rem 1rem var(--base-primary);
  margin-top: -3rem;
  z-index: 2;
  position: relative;
}

.boardBanner::before {
  content: '';
  display: block;
  box-shadow: inset 0 0 10rem 5rem rgba(33, 33, 33, .5);
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 30rem;
  z-index: 1;
  pointer-events: none;
}

.boardBanner::after {
  content: '';
  width: calc(100% + 4rem);
  background-image: linear-gradient(45deg, #ff4081, #3d5afe);
  display: block;
  height: calc(100% + 4rem);
  position: absolute;
  z-index: -1;
  top: -2rem;
  right: -2rem;
  bottom: -2rem;
  left: -2rem;
  background-position: 50% 25%;
  background-size: cover;
  background-repeat: no-repeat;
  filter: blur(2px);
}

/**
 * you can actually add your own banner image, either to every board or
 * for specific boards using the following format:
 *
 * .boardBanner::after {
 *   background-image: url('INSERT URL HERE');
 * }
 *
 * .board_fit .boardBanner::after {
 *   background-image: url('INSERT URL FOR /fit/ HERE');
 * }
 *
 * .board_g .boardBanner::after {
 *   background-image: url('INSERT URL FOR /g/ HERE')
 * }
 *
 */

/**
 * until the blotter has the ability to remain hidden until new
 * content is added, it'll just stay hidden
 */

#blotter {
  display: none;
}

/**
 * closed or archived thread, and global messages
 */

:root.hide-announcement .globalMessage {
  display: none;
}

/**
 * in large threads, due to the way 4chan x renders the page,
 * applying any "fancy" styles to the announcements causes
 * massive FOUT and reflow issues.
 */

.globalMessage {
  position: fixed;
  left: 50%;
  transform: translateX(-50%);
  bottom: 0;
  padding: 1rem 1.5rem;
  background-color: var(--base-black);
  color: var(--base-white);
  text-align: center;
  will-change: transform;
  z-index: 5;
}

.globalMessage a {
  border-bottom: 1px solid;
}

.closed,
.is_arclist .center {
  text-align: center;
  padding: 1rem 1.5rem;
  font-size: 1.25rem;
  color: var(--base-white);
  background-color: var(--base-red);
  position: relative;
}

/**
 * normally, ads are given the `.center` class, but when browsing
 * the archive, the announcement at the top of the page also
 * uses this class, so we need to unset the `!important` used
 */

.is_arclist .center {
  display: block !important;
}

/*
.closed,
.globalMessage {
  text-align: center;
  padding: 1rem 1.5rem;
  font-size: 1.25rem;
  color: var(--base-white);
  background-color: var(--base-red);
  position: relative;
}

.globalMessage a {
  color: var(--base-white);
  border-bottom: 1px solid;
}
*/
/*
.hide-announcement {
  font-size: 0;
}

.hide-announcement::after {
  cursor: pointer;
  position: absolute;
  right: 1rem;
  top: 50%;
  margin-top: -.75rem;
  opacity: .65;
  transition: opacity .25s;
}

.hide-announcement:hover::after {
  opacity: .85;
}
*/

/**
 * this ensures that the pagelist and footer always stays at the
 * bottom of the window if the content isn't 'tall' enough
 */

#delform {
  min-height: calc(100vh - 35rem);
}

:root.paged-mode #delform {
  min-height: calc(100vh - 4.5rem);
}

:root.catalog-mode #delform {
  min-height: calc(100vh - 4.5rem);
}

.board {
  position: relative;
  z-index: 1;
  margin-top: -4rem;
}

.closed ~ #delform .board {
  margin-top: 1rem;
}

.thread {
  max-width: 75%;
  padding: 0 1.5rem;
  margin: 0 auto 1.5rem;
}

/**
 * a modern, micro clearfix, as per:
 * http://cssmojo.com/latest_new_clearfix_so_far/
 *
 * element::after {
 *   content: '';
 *   display: table
 *   clear: both;
 * }
 */

/**
 * coming chrome 58:
 * http://caniuse.com/#feat=flow-root
 * https://www.chromestatus.com/feature/5769454877147136
 * https://css-tricks.com/display-flow-root/
 */

.post::after {
  content: '';
  display: table;
  clear: both;
}

.post {
  position: relative;
}

.hide-reply-button,
.hide-thread-button {
  display: none;
}

.post {
  background-color: var(--base-white);
  padding: 1rem;
  margin-bottom: 1px;
  transition: background-color .25s;
}

.postContainer:last-child .post {
  margin-bottom: 0;
}

.summary {
  text-align: center;
  background-color: var(--base-white);
  display: block;
  padding: .5rem 0;
  margin-bottom: 1px;
}

/**
 * due to having `color: inherit` for `a`, we need to define
 * the actual colour here
 */

.post a,
.summary a {
  color: var(--base-primary);
}

.post a:hover,
.summary a:hover {
  color: var(--dark-primary);
}

/**
 * if the post has a subject, make it read a bit better
 * by adding 'subject by anon'
 */

.subject:not(:empty)::after {
  content: ' by ';
  color: var(--base-grey);
  font-weight: 400;
}

/**
 * gives post times and pages a different contrast
 */

.dateTime,
.page-num {
  color: var(--base-grey);
}

.abbr {
  color: var(--base-grey);
}

/**
 * spaces the elements to either side of the post time
 */

.dateTime {
  margin: 0 .5rem;
}

/**
 * converts 'No.69000' into '#69000'
 */

.postNum > a:first-child {
  font-size: 0;
}

.postNum > a:first-child::after {
  content: '#';
  font-size: 1rem;
}

/**
 * replace 4chan icons with the appropriate svg icons from material icons
 */

.stickyIcon {
  vertical-align: baseline;
  height: 0;
  width: 1rem;
  padding-top: 1rem;
  background-repeat: no-repeat;
  background-image: url('data:image/svg+xml;utf8, <svg xmlns="http://www.w3.org/2000/svg" fill="#212121" height="18" viewBox="0 0 24 24" width="18"><path d="M12 2C8.13 2 5 5.13 5 9c0 5.25 7 13 7 13s7-7.75 7-13c0-3.87-3.13-7-7-7zm0 9.5c-1.38 0-2.5-1.12-2.5-2.5s1.12-2.5 2.5-2.5 2.5 1.12 2.5 2.5-1.12 2.5-2.5 2.5z"/><path d="M0 0h24v24H0z" fill="none"/></svg>');
}

.closedIcon {
  vertical-align: baseline;
  height: 0;
  width: 1rem;
  padding-top: 1rem;
  background-repeat: no-repeat;
  background-image: url('data:image/svg+xml;utf8, <svg xmlns="http://www.w3.org/2000/svg" fill="#212121" height="18" viewBox="0 0 24 24" width="18"><path d="M0 0h24v24H0z" fill="none"/><path d="M18 8h-1V6c0-2.76-2.24-5-5-5S7 3.24 7 6v2H6c-1.1 0-2 .9-2 2v10c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V10c0-1.1-.9-2-2-2zm-6 9c-1.1 0-2-.9-2-2s.9-2 2-2 2 .9 2 2-.9 2-2 2zm3.1-9H8.9V6c0-1.71 1.39-3.1 3.1-3.1 1.71 0 3.1 1.39 3.1 3.1v2z"/></svg>');
}

.archivedIcon {
  vertical-align: baseline;
  height: 0;
  width: 1rem;
  padding-top: 1rem;
  background-repeat: no-repeat;
  background-image: url('data:image/svg+xml;utf8, <svg xmlns="http://www.w3.org/2000/svg" fill="#212121" height="18" viewBox="0 0 24 24" width="18"><path d="M2.54 5.23l-1.39-1.68C18.88 3.21 18.47 3 18 3H6c-.47 0-.88.21-1.16.55L3.46 5.23C3.17 5.57 3 6.02 3 6.5V19c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V6.5c0-.48-.17-.93-.46-1.27zM12 17.5L6.5 12H10v-2h4v2h3.5L12 17.5zM5.12 5l.81-1h12l.94 1H5.12z"/><path d="M0 0h24v24H0z" fill="none"/></svg>');
}

/**
 * convert [Reply] into a button that says view
 */

.postNum > span:last-child {
  font-size: 0;
}

.postNum .replylink::after {
  content: 'view';
  font-size: 1rem;
  color: var(--base-white);
  background-color: var(--base-primary);
  padding: .5rem .75rem;
  margin-left: .5rem;
  transition: background-color .25s;
}

.postNum .replylink:hover::after {
  background-color: var(--dark-primary);
}

/**
 * user id styling, where we get rid of the "(ID: XXX)" and just
 * display the id, and if enabled, give the painted id some padding
 */

.posteruid {
  font-size: 0;
}

.posteruid .hand {
  font-size: 1rem;
}

.painted {
  padding: .25rem .5rem;
}

/**
 * file formatting. contains 4chan x specific css regarding
 * image expansion
 */

.file {
  position: relative;
  font-size: .9rem;
  line-height: 1rem;
  color: var(--base-white);
}

.fileThumb {
  float: left;
  margin: .5rem;
}

.fileText {
  display: none;
  position: absolute;
  background-color: rgba(33, 33, 33, .8);
  z-index: 2;
  padding: .5rem;
  top: -1.5rem;
  left: .5rem;
}

.file:hover .fileText {
  display: block;
}

.fileText a {
  color: var(--light-primary);
  unicode-bidi: -webkit-isolate;
  unicode-bidi: -moz-isolate;
  unicode-bidi: isolate;
  transition: color .25s;
}

.fileText a:hover {
  color: var(--base-primary);
}

.fileText-original,
.fntrunc,
.expanded-image > .post > .file > .fileThumb > video[data-md5],
.expanded-image > .post > .file > .fileThumb > img[data-md5] {
  display: none;
}

.full-image {
  display: none;
  cursor: pointer;
}

.expanded-image > .post > .file > .fileThumb > .full-image {
  display: inline;
}

.expanded-image {
  clear: left;
}

.expanding {
  opacity: .5;
}

:root.fit-height .full-image {
  max-height: 100vh;
}

:root.fit-height.fixed .full-image {
  max-height: 93vh;
  max-height: calc(100vh - 2rem);
}

:root.fit-width .full-image {
  max-width: 100%;
}

:root.ua-gecko.fit-width .full-image {
  width: 100%;
}

.fileThumb > .warning {
  clear: both;
}

.fa-download::after {
  font-size: 1rem;
  vertical-align: bottom;
}

/**
 * fancy backlinks:
 *   quoted by #1, #2, and #3.
 * because ops have `.file` before `.postInfo` (intentional?),
 * the `margin-left` doesn't really apply
 */

.container:empty {
  display: none;
}

.container {
  display: block;
  font-size: .75rem;
  color: var(--base-grey);
  margin-left: 1rem;
  margin-top: .25rem;
}

.container::before {
  content: 'quoted by ';
}

.container::after {
  content: '.';
}

.container .backlink:not(:only-of-type):not(:last-of-type)::after {
  content: ', ';
  color: var(--base-grey);
}

.container .backlink:not(:only-of-type):last-of-type::before {
  content: 'and ';
  color: var(--base-grey);
}

/**
 * slightly increase the font size of posts
 */

.postMessage {
  font-size: 1.1rem;
  margin: .5rem 0 0 .5rem;
}

/**
 * >implying
 */

.postMessage > .quote {
  color: var(--base-green);
}

/*
 * §A6 - page list
 */

.pages.cataloglink,
.pagelist .prev button,
.pagelist .next button {
  display: none;
}

.pagelist {
  font-family: circularBook;
  text-align: center;
  display: flex;
}

.pages {
  font-size: 0;
  width: 100%;
  display: flex;
  align-items: stretch;
}

.pagelist .prev,
.pagelist .next {
  width: 10%;
}

.pagelist .prev a,
.pagelist .next a {
  display: block;
  color: var(--dark-grey);
  transition: color .25s, background-color .25s;
}

.pagelist .prev a::after,
.pagelist .next a::after {
  font-size: 3rem;
  line-height: 4.5rem;
  flex: 1 1 auto;
  height: 3rem;
  overflow: hidden;
  display: block;
  color: var(--dark-grey);
  transition: color .25s;
}

.pagelist .prev a:hover::after,
.pagelist .next a:hover::after {
  color: var(--base-white);
}

.pages strong {
  font-family: circularMedium;
  display: block;
  flex: 1 1 auto;
}

.pages strong a {
  color: var(--base-white);
  background-color: var(--base-primary);
}

.pages a {
  font-size: 3rem;
  color: var(--dark-grey);
  display: block;
  flex: 1 1 auto;
  height: 3rem;
  min-width: 3rem;
  line-height: 4.5rem;
  overflow: hidden;
  transition: color .25s, background-color .25s;
}

.pagelist a:hover {
  color: var(--base-white);
  background-color: var(--light-primary);
}

/*
 * §A7 - bottom navigation
 */

:root.hide-bottom-board-list #boardNavDesktopFoot {
  display: none;
}

#boardNavDesktopFoot {
  background-color: var(--dark-grey);
  max-width: 100%;
  padding: 1rem 1.5rem 0;
}

#boardNavDesktopFoot::before {
  content: 'le full 4chan Board List';
  display: block;
  font-size: 1rem;
  color: var(--base-grey);
  cursor: ns-resize;
  transition: color .25s;
}

#boardNavDesktopFoot:hover::before {
  color: var(--light-grey);
}

#boardNavDesktopFoot .boardList {
  font-size: 0;
  display: flex;
  flex-wrap: wrap;
  flex-direction: column;
  height: 0;
  transition: height .25s;
  overflow: hidden;
}

#boardNavDesktopFoot.is-active .boardList {
  margin-top: .5rem;
  height: calc(2rem * 19);
  overflow-x: auto;
}

#boardNavDesktopFoot a {
  color: var(--base-grey);
  display: block;
  min-width: 10rem;
  padding: .25rem 0;
  margin-right: 1rem;
}

#boardNavDesktopFoot a:hover {
  color: var(--light-grey);
}

#boardNavDesktopFoot a::before {
  content: attr(href) ' - ';
  font-size: 1rem;
  display: inline;
}

#boardNavDesktopFoot a::after {
  content: attr(title);
  font-size: 1rem;
  display: inline;
}

/*
 * §A8 - copyright and footer
 */

.absBotText {
  font-size: .75rem;
  color: var(--base-grey);
  background-color: var(--dark-grey);
  padding: 1rem 1.5rem;
  position: relative;
  user-select: none;
}

.absBotDisclaimer {
  display: block;
  padding-right: 1.5rem;
}

.absBotText::after {
  content: url('https://s.4cdn.org/image/favicon.ico');
  display: block;
  height: 1rem;
  width: 1rem;
  position: absolute;
  right: 1.5rem;
  bottom: 1rem;
  filter: grayscale(1);
}

#footer-links {
  font-size: 0;
  display: flex;
  flex-direction: row;
  margin-top: .75rem;
}

#footer-links a {
  font-size: .75rem;
  color: var(--base-grey);
  display: block;
  width: calc((100% / 4) - .5rem);
  margin-right: .5rem;
}

#footer-links a:hover {
  color: var(--light-grey);
}

/**
 * /f/ specific styling
 * unfortunately, the table that /f/ uses to display posts and the
 * table that the archive uses both have the `.flashListing` class.
 * the only difference is that the archive uses the `#arc-list` id.
 * so there will be some overlap
 */

.flashListing {
  background-color: var(--base-white);
  margin: 0 auto 1rem;
}

.board_f .flashListing tr:not(:last-child) {
  border-bottom: 1px solid var(--light-grey);
}

.board_f .flashListing tr:first-child {
  font-weight: 500;
  text-align: center;
  text-transform: lowercase;
  color: var(--base-white);
  background-color: var(--base-primary);
  border-bottom: 1px solid var(--dark-primary);
}

.board_f .flashListing tr:first-child td:not(:last-child) {
  border-right: 1px solid var(--dark-primary);
}

.board_f .flashListing .highlightPost {
  background-color: var(--very-light-primary);
}

.flashListing td {
  text-align: center;
  padding: .5rem 1rem;
}

.board_f .flashListing tr:not(:first-child) td:nth-child(3),
.board_f .flashListing tr:not(:first-child) td:nth-child(5) {
  text-align: left;
}

.board_f .flashListing tr:not(:first-child) td:not(:last-child) {
  border-right: 1px solid var(--light-grey);
}

.board_f .flashListing .file-col a {
  color: var(--base-primary);
}

.board_f .flashListing .file-col a:hover {
  color: var(--dark-primary);
}

.board_f .flashListing .subject::after {
  display: none;
}

/**
 * archive support
 */

#arc-list {
  margin-top: 1rem;
}

#arc-list thead tr {
  font-weight: 500;
  text-align: center;
  text-transform: lowercase;
  color: var(--base-white);
  background-color: var(--base-primary);
  border-bottom: 1px solid var(--dark-primary);
}

#arc-list thead td:not(:last-child) {
  border-right: 1px solid var(--dark-primary);
}

#arc-list tbody td:not(:last-child) {
  border-right: 1px solid var(--light-grey);
}

#arc-list tbody tr:not(:last-child) {
  border-bottom: 1px solid var(--light-grey);
}

/**
 * 4chan x specific css, ordered as it appears on the page:
 * §A1 - header
 * §A2 - shortcuts
 * §A3 - notifications
 * §A4 - menus
 * §A5 - settings
 * §A6 - qr
 * §A7 - thread watcher
 * §A8 - gallery
 * §A9 - misc
 * §A10 - filters
 */

.warning {
  color: var(--base-red);
}

.new {
  color: var(--base-green);
}

/**
 * generic `.move` class always has this rule. 4chan x gives it
 * `overflow: hidden` too
 */

.move {
  cursor: move;
  overflow: hidden;
}

#ihover {
  position: fixed;
  z-index: 10;
}

/**
 * quoting
 */

#qp {
  position: fixed;
  z-index: 20;
  background-color: var(--base-white);
  border: 1px solid var(--base-grey);
  box-shadow: var(--default-depth);
  margin: .5rem;
}

#qp.warning {
  padding: .5rem;
}

#qp .post {
  margin: 0;
}

#qp img {
  max-height: 80vh;
  max-width: 50vw;
}

.forwardlink {
  border-bottom: 1px dashed;
}

.deadlink {
  text-decoration: line-through;
  opacity: .8;
}

.inlined {
  opacity: .65;
}

.inline {
  clear: both;
}

/**
 * we make the post text bigger, and as a result inlined post info
 * gets affected, so quickly fix that
 */

.inline .postInfo {
  font-size: 1rem;
}

.inline .post {
  border-left: 1px solid var(--base-grey);
}

.filtered {
  text-decoration: line-through;
}

/**
 * support for anonymize settig
 */

:root.anonymize .name,
:root.anonymize .post-author:not([class*=capcode]) {
  font-size: 0;
}

:root.anonymize .postertrip,
:root.anonymize .n-pu {
  display: none;
}

:root.anonymize .name::before,
:root.anonymize .post-author:not([class*=capcode])::before {
  content: 'Anonymous';
  font-size: 1rem;
}

/**
 * §A1 - header
*/

#header-bar {
  color: var(--base-white);
  background-color: transparent;
  position: relative;
  z-index: 10;
  padding: 0 1.5rem;
  display: flex;
  justify-content: space-between;
  align-items: center;
  will-change: transform, background-color;
  transition: transform .25s, background-color .25s;
}

:root.fixed #header-bar {
  position: fixed;
  right: 0;
  left: 0;
}

:root.fixed.top-header #header-bar {
  top: 0;
}

:root.fixed.bottom-header #header-bar {
  bottom: 0;
}

:root.bottom-header:not(.fixed) body {
  padding-bottom: 3rem;
}

:root:not(.fixed) #header-bar,
#header-bar.scrolled {
  background-color: var(--base-primary);
}

#board-list,
#custom-board-list,
#full-board-list,
#header-bar .boardList {
  display: flex;
}

#header-bar .boardList {
  flex-wrap: wrap;
}

#board-list {
  flex: 1;
  user-select: none;
}

#custom-board-list {
  line-height: 3rem;
}

/**
 * when the full board list is displayed, this hides all the
 * [, ], and /'s that separates the boards
 */

#header-bar .boardList span,
#full-board-list a:not(.hide-board-list-button):not([href$='/a/']):not([href$='/f/']):not([href$='/g/']):not([href$='/gif/']):not([href$='/h/']):not([href$='/hr/']):not([href$='/p/']):not([href$='/s/']):not([href$='/v/']):not([href$='/vg/']):not([href$='/wg/']):not([href$='/i/']):not([href$='/ic/']):not([href$='/r9k/']):not([href$='/s4s/']):not([href$='/vip/']):not([href$='/fa/']):not([href$='/fit/']):not([href$='/gd/']):not([href$='/pol/']):not([href$='/tv/']):not([href$='/vp/']):not([href$='/wsg']):not([href$='/wsr/']) {
  display: none;
}

#board-list a {
  font-family: circularBook;
  color: var(--base-white);
  text-transform: lowercase;
  display: inline-flex;
  justify-content: center;
  align-items: center;
  padding: 0 .5rem;
  height: 3rem;
  min-width: 3rem;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
  border-bottom: 3px solid transparent;
  transition: opacity .25s, border-bottom .25s;
}

#board-list a:not(.current) {
  opacity: .65;
}

#board-list a:not(.current):hover {
  opacity: .85;
  border-bottom: 3px solid var(--light-accent);
}

#board-list a.current {
  font-family: circularMedium;
  border-bottom: 3px solid var(--base-accent);
}

:root.centered-links #board-list,
:root.centered-links #header-bar .boardList {
  justify-content: center;
}

:root.fixed.top-header #header-bar.autohide:not(:hover) {
  margin-bottom: -1rem;
  transform: translateY(-100%);
}

:root.fixed.bottom-header #header-bar.autohide:not(:hover) {
  transform: translateY(100%);
}

#shortcuts {
  display: flex;
}

/**
 * depending on what is enabled, this can be 49px as opposed
 * to the intended 48px
 */

.shortcut {
  display: inline-flex;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}

#shortcuts .shortcut > a {
  display: inline-flex;
  justify-content: center;
  align-items: center;
  padding: 0 .5rem;
  height: 3rem;
  opacity: .65;
  transition: opacity .25s;
}

#shortcuts .menu-button::after {
  opacity: .65;
  transition: opacity .25s;
}

#shortcuts .menu-button:hover::after,
#shortcuts .shortcut > a:hover {
  opacity: .85;
}

#shortcuts .fa::after,
#shortcuts .menu-button::after {
  color: var(--base-white);
  height: 3rem;
  line-height: 3rem;
  padding: 0 .25rem;
  text-align: center;
}

#shortcuts .fa-eye:not(.disabled)::after,
:root.gallery-open #shortcuts .fa-picture-o::after,
#shortcuts .fa-comment-o:not(.disabled)::after,
#shortcuts .menu-button.active::after {
  opacity: 1;
  border-bottom: 3px solid var(--base-accent);
}

#shortcuts .fa-eye.replies-quoting-you::after {
  color: var(--base-accent);
}

:root:not(.fappeTyme) #shortcut-fappe,
:root:not(.werkTyme) #shortcut-werk {
  display: none;
}

:root:not(.shortcut-icons) #shortcuts .fa::after {
  display: none;
}

:root.shortcut-icons #shortcuts .fa {
  font-size: 0;
}

/*
  document.dispatchEvent(new CustomEvent('CreateNotification', {
    detail: {
      type: 'success', // info, warning, error
      content: 'TEXT HERE',
      lifetime: 0
    }
  }));
*/

#notifications {
  position: fixed;
  top: 0;
  height: 0;
  text-align: center;
  right: 0;
  left: 0;
  visibility: visible;
}

:root.fixed.top-header:not(.gallery-open) #header-bar #notifications,
:root.fixed.top-header #header-bar.autohide #notifications {
  position: absolute;
  top: 100%;
}

.notification {
  color: var(--base-white);
  margin: .5rem auto 0;
  width: 50rem;
  max-width: 100%;
  position: relative;
  padding: .5rem 1rem;
  transition: opacity .25s;
}

.notification.error {
  background-color: var(--base-red);
}

.notification.warning {
  background-color: var(--base-orange);
}

.notification.success {
  background-color: var(--base-green);
}

.notification.info {
  background-color: var(--base-blue);
}

.notification a {
  color: var(--base-white);
}

.message a {
  border-bottom: 1px solid;
}

.notification .fa-times::after {
  position: absolute;
  right: 1rem;
  top: 50%;
  transform: translateY(-50%);
  opacity: .75;
  transition: opacity .25s;
}

.notification .fa-times:hover::after {
  opacity: 1;
}

.message {
  white-space: pre-line;
  max-height: 10rem;
  overflow: auto;
}

:root.tainted .report-error {
  display: none;
}

#scroll-marker {
  right: 0;
  left: 0;
  height: 1rem;
  position: absolute;
  display: none;
}

#header-bar:not(.autohide) #scroll-marker {
  pointer-events: none;
}

:root.fixed #scroll-marker {
  display: block;
}

:root.fixed.top-header #scroll-marker {
  top: 100%;
}

:root.fixed.bottom-header #scroll-marker {
  bottom: 100%;
}

/**
 * updater
 */

#updater {
  font-size: .75rem;
}

#shortcut-updater {
  line-height: 3rem;
  margin-right: .5rem;
}

/**
 * also supports floating updater
 */

:root.float #updater {
  position: fixed;
  z-index: 10;
  color: var(--base-white);
  background-color: var(--base-primary);
  padding: .5rem;
  box-shadow: var(--default-depth);
}

#updater .move {
  position: absolute;
  width: 100%;
  height: 100%;
  top: 0;
  left: 0;
}

#update-status:not(.empty) {
  margin-right: .25rem;
}

#update-timer {
  cursor: pointer;
}

/**
 * thread stats
 */

#thread-stats {
  font-size: .75rem;
}

#shortcut-stats {
  line-height: 3rem;
  margin-right: .5rem;
}

/**
 * also support floating thread stats
 */

:root.float #thread-stats {
  position: fixed;
  z-index: 10;
  color: var(--base-white);
  background-color: var(--base-primary);
  padding: .5rem;
  box-shadow: var(--default-depth);
}

:root.float #thread-stats span:not(#page-count) {
  pointer-events: none;
}

#page-count {
  cursor: pointer;
}

/**
 * support for 4chan x's navlinks, that is,
 * being able navigate threads on the index;
 * it is also used to go to the top and bottom
 * of a thread, when in a thread
 */

#navlinks {
  position: fixed;
  top: 4rem;
  right: 0;
  z-index: 15;
  font-size: 0;
  display: block;
  color: var(--base-white);
  background-color: var(--base-primary);
  box-shadow: var(--default-depth);
}

#navlinks a:hover::after {
  background-color: var(--dark-primary);
}

/**
 * support for custom board titles and
 * make it visually obvious you can edit the title
 */

.boardTitle,
.boardSubtitle {
  white-space: pre-line;
}

.boardTitle[title],
.boardSubtitle[title] {
  cursor: help;
}

.boardTitle[contenteditable='true'],
.boardSubtitle[contenteditable='true'] {
  cursor: text;
  border-bottom: 1px dashed;
}

/**
 * index related code
 */

:root.index-loading .navLinks:not(.json-index),
:root.index-loading .board:not(.json-index),
:root.index-loading .pagelist:not(.json-index),
:root.infinite-mode .pagelist,
:root.all-pages-mode .pagelist,
:root.catalog-mode .pagelist,
:root:not(.catalog-mode) .indexlink,
:root.catalog-mode .cataloglink,
:root:not(.catalog-mode) #index-size {
  display: none;
}

#hidden-label,
#index-search::-webkit-search-cancel-button {
  display: none;
}

/**
 * this removes [Index], [Catalog], [Archive], and [Bottom]
 * from the index navigation
 */

.navLinks .indexlink,
.navLinks .cataloglink,
.navLinks .archlistlink,
.navLinks .bottomlink {
  display: none;
}

/**
 * apparently `.navLinks` is used to determine the top of
 * the index, so navigating pages with it being `fixed`
 * never returns you to the top of the page
 */

/**
 * until i decide a nice way to style this part of the page,
 * i'm just gonna leave it
 */

.navLinks.json-index {
  position: relative;
  z-index: 5;
  max-width: 75%;
  padding: .5rem 1rem;
  margin: -4rem auto 5rem;
  color: var(--base-white);
  background-color: var(--base-primary);
  display: flex;
  align-items: center;
  justify-content: space-between;
}

#index-search {
  flex: 1 1 auto;
  color: var(--base-white);
  background: none;
  padding: .25rem .5rem;
  border: 0;
  border-bottom: 1px solid var(--base-white);
  margin: 0 .5rem;
}

#index-search::-webkit-input-placeholder {
  color: var(--base-white);
}

#index-search::placeholder {
  color: var(--base-white);
}

#index-options select {
  margin-left: .5rem;
}

/*
#index-search {
	position: absolute;
	width: 15rem;
	top: -10rem;
	left: 50%;
	margin-left: -7.5rem;
	background-color: rgba(255, 255, 255, .5);
	border: 0;
	border-bottom: 1px solid var(--base-grey);
	transition: border .25s;
}

#index-search:focus {
	border-bottom-color: var(--base-primary);
}
*/
/*
:root.is-searching .board {
	transform: scale3d(.7, .7, 1);
	perspective: 1200px;
	perspective-origin: 50% -50%;
}
*/
/*
:root.is-searching body::after {
	content: '';
	position: fixed;
	display: block;
	width: 100%;
	height: 100vh;
	top: 0;
	left: 0;
	background-color: rgba(33, 33, 33, .75);
}
*/
/*
.navLinks::before {
	content: 'search';
	line-height: 1.5;
	position: absolute;
	top: -10rem;
}

#index-search {
	position: absolute;
	top: -10rem;
	left: calc( 50% - 10rem );
	width: 20rem;
	background: none;
	border: 0;
}
*/
/*
.navLinks {
  color: var(--base-white);
  background-color: var(--base-primary);
  padding: 0 1rem;
	margin-bottom: 1.5rem;
  position: fixed;
	top: 4rem;
	right: 0;
	transform: translateX(90%);
  z-index: 10;
	box-shadow: var(--default-depth);
}

.navLinks::before {
	content: 'search';
	line-height: 1.5;
}

.navLinks:hover {
	transform: translateX(0);
}

#index-last-refresh a {
  color: var(--base-white);
}

#index-search {
  padding: .25rem .5rem;
  border: 0;
  margin: 0 .5rem;
  transition: box-shadow .25s;
}

#index-search:focus,
#index-search[data-searching] {
  box-shadow: inset 0 -1px 0 0 var(--base-primary);
}

#index-search-clear {
  color: var(--base-grey);
  display: inline-block;
  position: relative;
  left: -1.5rem;
  width: 0;
}

#index-search-clear:hover {
  color: var(--base-red);
}

#index-search:not([data-searching]) + #index-search-clear {
  display: none;
}

#index-mode,
#index-sort,
#index-size {
  float: right;
}
*/

/**
 * hides the clear button, unless searching
 */

#index-search:not([data-searching]) + #index-search-clear {
  display: none;
}

/**
 * makes the reverse order checkbox into an icon instead
 */

#index-rev {
  visibility: hidden;
  display: inline-block;
  height: 1.5rem;
  width: 1.5rem;
  vertical-align: middle;
}

#index-rev::after {
  content: 'swap_vert';
  visibility: visible;
  cursor: pointer;
  transition: color .25s;
}

#index-rev:checked::after {
  color: var(--base-accent);
}

/**
 * stubs of hidden threads and posts
 */

.stub ~ * {
  display: none;
}

.stub {
  background-color: var(--base-white);
  padding: 1rem;
  margin-bottom: 1px;
}

/**
 * stubs look like garbage at the moment
 * perhaps if they ever get revamped, they might get improved
 */

.stub .fa::after,
.stub .menu-button::after {
  font-size: 1rem;
  line-height: 1.5;
}

.stub .fa-plus-square-o::after {
  vertical-align: text-bottom;
}

/**
 * catalogue support
 */

/**
 * really? god damn 😂👌
 */
/*
.catalog-container:not(:hover) > * > .file,
.catalog-container:not(:hover) > * > .postInfo > :not(.subject),
.catalog-container:not(:hover) > * > .catalog-replies,
.catalog-container:not(:hover) .extra-linebreak,
.catalog-container:not(:hover) .abbr,
:root:not(.catalog-hover-expand) .catalog-container > * > .file,
:root:not(.catalog-hover-expand) .catalog-container > * > .postInfo > :not(.subject),
:root:not(.catalog-hover-expand) .catalog-container > * > .catalog-replies,
:root:not(.catalog-hover-expand) .catalog-container .extra-linebreak,
:root:not(.catalog-hover-expand) .catalog-container .abbr,
.catalog-thread > .catalog-container > :not(.catalog-post),
.catalog-post > .file > :not(.fileText),
.catalog-post > * > .fileText > :not(:first-child),
.catalog-post > .postInfo > :not(.subject):not(.nameBlock):not(.dateTime),
.catalog-post > * > * > .posteruid,
.post:not(.catalog-post) > .catalog-link,
.post:not(.catalog-post) > .catalog-stats,
.post:not(.catalog-post) > .catalog-replies {
  display: none;
}
*/

:root:not(.catalog-mode) [class^=catalog] {
  display: none;
}

/**
 * when catalogue mode is switched to/from paged mode, some
 * elements retain, so we need some ugly looking selectors to ensure
 * things look like they should. some poor explanation, in order:
 * - hide the original `.file`
 * - if a post is no longer a catalogue post, hide catalogue elements
 */

.catalog-post .file,
.post:not(.catalog-post) [class^=catalog] {
  display: none;
}

/**
 * create a semi-flexible grid for catalog threads to flow into.
 * a masonry-esque version of this could look cool
 */
/*
:root.catalog-mode .board {
	display: flex;
	flex-direction: row;
	flex-wrap: wrap;
	justify-content: space-around;
	align-items: center;
	margin: -4rem 1.5rem 1rem;
}
*/
/**
 * here is where the first headache begins! `.catalog-thread` elements
 * still keep their `.thread` class, so we have to override the css
 * given to them originally. this also applies to the individual post
 * itself
 */
/*
.catalog-thread {
	position: relative;
	word-wrap: break-word;
	flex-basis: 0;
	flex-grow: 1;
	flex-shrink: 1;
	padding: 0;
	margin: 0 .25rem 1rem .25rem;
}
*/

.catalog-thread {
  float: left;
  min-height: 10rem;
}

.catalog-thread:hover {
  min-height: 12rem !important;
}

.catalog-small .catalog-thread {
  width: 12.5%;
}

.catalog-large .catalog-thread {
  width: 20%;
}
/*
.catalog-small .catalog-thread {
	min-width: 12.5%;
	max-width: 20%;
}

.catalog-large .catalog-thread {
	min-width: 17.5%;
	max-width: 25%;
}
*/
/**
 * in the catalogue, the thumbnail is actually the link to the thread
 */

.catalog-link {
  position: relative;
  display: block;
}

.catalog-thumb {
  width: 100% !important;
  height: auto !important;
}

/**
 * the primary menu is actually the one in `.catalog-stats`
 */

.catalog-post > .postInfo > .menu-button {
  display: none;
}

.catalog-stats .menu-button {
  display: none;
}

.catalog-stats {
  font-size: .9rem;
  color: var(--base-white);
  background-color: var(--base-primary);
  padding: .25rem .5rem;
  text-align: center;
  width: 75%;
  margin: -1rem auto .5rem;
  position: relative;
}

.catalog-stats > [title] {
  cursor: help;
}

/**
 * unset the 'Subject by Anonymous' styling
 */

.catalog-post > .postInfo > :not(.subject),
.catalog-post .subject::after {
  display: none;
}

.catalog-post .subject {
  display: block;
  text-align: center;
}

.catalog-post .postMessage {
  font-size: .9rem;
  margin: 0;
  max-height: 10rem;
  overflow: hidden;
}

/**
 * fappe and werk tyme support
 */

:root.fappeTyme .thread > .noFile,
:root.fappeTyme .threadContainer > .noFile,
:root.werkTyme .postContainer:not(.noFile) .fileThumb,
:root.werkTyme .catalog-thumb:not(.deleted-file):not(.no-file),
:root:not(.werkTyme) .werkTyme-filename {
  display: none;
}

#shortcut-fappe,
#shortcut-werk {
  line-height: 3rem;
  text-align: center;
}

.indicator {
  display: inline-block;
  color: var(--base-white);
  background-color: var(--base-accent);
  cursor: pointer;
  padding: 0 .25rem;
  min-width: 2rem;
}

/**
 * quote threading
 */

.threadContainer {
  margin-left: 1rem;
  border-left: 1px solid var(--base-grey);
}

.threadOP {
  clear: both;
}

/**
 * thread watcher
 */

.watch-thread-link::after {
  content: 'favorite_border';
  font-size: 1rem;
  vertical-align: text-top;
  opacity: .65;
  transition: opacity .25s, color .25s;
}

.watch-thread-link:hover::after {
  opacity: .85;
}

.watch-thread-link.watched::after {
  content: 'favorite';
  color: var(--base-red);
  opacity: 1;
}

#thread-watcher {
  position: absolute;
  z-index: 10;
  min-width: 30rem;
  background-color: var(--base-white);
  box-shadow: var(--default-depth);
}

:root.fixed-watcher #thread-watcher {
  position: fixed;
}

#thread-watcher .move {
  text-transform: lowercase;
  color: var(--base-white);
  background-color: var(--base-primary);
  padding: 0 1rem;
  display: flex;
  align-items: center;
}

#thread-watcher .fa-refresh::after {
  color: var(--base-white);
  margin-left: .5rem;
  height: 3rem;
  line-height: 3rem;
  padding: 0 .5rem;
  opacity: .65;
  transition: opacity .25s;
}

#watcher-status {
  text-align: center;
  flex: 1;
}

#thread-watcher .menu-button::after {
  color: var(--base-white);
  height: 3rem;
  line-height: 3rem;
  padding: 0 .5rem;
  opacity: .65;
  transition: opacity .25s;
}

#thread-watcher .close {
  font-size: 0;
}

#thread-watcher .close::after {
  color: var(--base-white);
  padding: 0 .5rem;
  height: 3rem;
  line-height: 3rem;
  opacity: .65;
  transition: opacity .25s;
}

#thread-watcher .fa-refresh:hover::after,
#thread-watcher .menu-button:hover::after,
#thread-watcher .close:hover::after {
  opacity: .85;
}

:root:not(.toggleable-watcher) #thread-watcher .close {
  display: none;
}

#watched-threads:empty::after {
  content: 'No threads being watched.';
  display: block;
  color: var(--base-grey);
  padding: 0 1rem;
  height: 3rem;
  line-height: 3rem;
}

#watched-threads > div {
  display: flex;
  align-content: center;
  max-width: 30rem;
  padding: 0 1rem;
  height: 3rem;
  line-height: 3rem;
  overflow: hidden;
  text-overflow: ellipsis;
}

#watched-threads > div:nth-child(even) {
  background-color: var(--light-grey);
}

#watched-threads .fa-times::after {
  color: var(--base-red);
  height: 3rem;
  line-height: 3rem;
  transition: color .25s;
}

#watched-threads .fa-times:hover::after {
  color: var(--dark-red);
}

.dead-thread {
  opacity: .4;
}

.dead-thread .watcher-title {
  text-decoration: line-through;
}

.watcher-link,
.watcher-title {
  margin-left: .5rem;
}

.replies-quoting-you > a,
#watcher-link.replies-quoting-you {
  color: var(--base-red) !important;
}

/**
 * menus
 */

#menu {
  font-size: .75rem;
  line-height: 1.5rem;
  color: var(--base-black);
  position: fixed;
  z-index: 15;
  background-color: var(--base-white);
  border: 1px solid var(--base-grey);
  padding: .5rem 0;
  white-space: nowrap;
  min-width: 10rem;
  box-shadow: var(--default-depth);
}

.entry {
  color: var(--base-black) !important;
  display: block;
  position: relative;
  cursor: pointer;
  padding: .5rem 1rem;
  transition: background-color .25s;
}

.entry:hover {
  background-color: var(--light-grey);
}

.entry.has-shortcut-text {
  display: flex;
  justify-content: space-between;
  align-items: center;
}

.entry .shortcut-text {
  font-size: .75rem;
  color: var(--base-grey);
  margin-left: .5rem;
}

.has-submenu::after {
  content: 'keyboard_arrow_right';
  position: absolute;
  right: .5rem;
  font-size: 1rem;
  line-height: 1.25;
}

/**
 * if a menu entry has a submenu, and the menu
 * is close to the right of the browser, ensure the arrow
 * flips accordingly
 */

.left .has-submenu::after {
  content: 'keyboard_arrow_left';
}

.submenu {
  display: none;
  position: absolute;
  left: 100%;
  background-color: var(--base-white);
  border: 1px solid var(--base-grey);
  margin-top: calc((.5rem + 1px) * -1);
  padding: .5rem 0;
  min-width: 7.5rem;
}

/**
 * this ensures submenus that go upwards as opposed
 * to downwards are still aligned the same
 */

.submenu[style*='m: 0'] {
  margin-top: 0;
  margin-bottom: calc((.5rem + 1px) * -1);
}

.focused > .submenu {
  display: block;
}

.entry.show-announcement {
  color: var(--base-red);
}

.entry .field {
  width: 4rem;
  margin-left: .5rem;
}

.entry [type='number'] {
  padding-left: .25rem;
}

.entry input[type='checkbox'] {
  visibility: hidden;
  margin-right: .25rem;
}

.entry input[type='checkbox']::after {
  content: 'check_box_outline_blank';
  font-size: 1rem;
  visibility: visible;
}

.entry input[type='checkbox']:checked::after {
  content: 'check_box';
  color: var(--base-green);
}

/**
 * because we want 'thread watcher' to be lowercased,
 * it means the menu for it gets lowercased too.
 * reverse it here
 */

#thread-watcher #menu {
  text-transform: capitalize;
}

/*
 * §A4 - menus
 */

/**
 * positions the menu button for posts in the top right of the post
 * and only displays them when the post is hovered.
 */

.post .menu-button::after {
  font-size: 1rem;
  color: var(--base-black);
}

.post > .postInfo > .menu-button {
  position: absolute;
  top: .75rem;
  right: .75rem;
  z-index: 1;
  will-change: opacity;
  opacity: 0;
  transition: opacity .25s;
}

.post > .postInfo > .menu-button.active,
.post:hover > .postInfo > .menu-button {
  opacity: 1;
}

/**
 * §A5 - settings
 */

#overlay {
  position: fixed;
  z-index: 15;
  background-color: rgba(33, 33, 33, .5);
  left: 0;
  top: 0;
  height: 100%;
  width: 100%;
}

/**
 * `transform` causes blurriness in rendering when the
 * window is resized, for whatever reason:
 * https://www.google.com.au/search?q=chrome+transform+font+render+blur
 */

#fourchanx-settings {
  position: fixed;
  z-index: 16;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  background-color: var(--base-white);
  display: flex;
  flex-direction: column;
  width: 75rem;
  max-width: 90%;
  height: 60rem;
  max-height: 90%;
  margin: auto;
  box-shadow: var(--default-depth);
  contain: paint;
}

#fourchanx-settings > nav {
  font-size: 0;
  color: var(--base-white);
  background-color: var(--base-primary);
  display: flex;
  padding: 0 1.5rem;
  text-transform: lowercase;
}

.sections-list,
.credits {
  display: flex;
}

#fourchanx-settings > nav a {
  font-size: 1rem;
  font-family: circularBook;
  color: var(--base-white);
  height: 3rem;
  line-height: 3rem;
  display: flex;
  padding: 0 .5rem;
  opacity: .65;
  border-bottom: 3px solid transparent;
  transition: opacity .25s, border-bottom .25s;
}

#fourchanx-settings > nav a:hover {
  opacity: .85;
  border-bottom: 3px solid var(--light-accent);
}

#fourchanx-settings > nav .close::after {
  height: 3rem;
  line-height: 3rem;
  display: flex;
}

#fourchanx-settings > nav .tab-selected {
  font-family: circularMedium;
  border-bottom: 3px solid var(--base-accent);
  opacity: 1;
}

.credits .export,
.credits .import,
.credits .reset {
  cursor: pointer;
}

/**
 * there's this element here in the settings,
 * and i don't know if it actually does anything.
 * this is the css from 4chan x:
    position: absolute;
    text-align: center;
    margin: auto;
    right: 0;
    left: 0;
    width: 200px;
 */

.imp-exp-result {
  flex: 1;
}

.section-container {
  flex: 1;
  overflow: auto;
  padding: .5rem 1rem;
}

#fourchanx-settings button {
  color: var(--base-white);
  background: var(--base-primary);
  padding: .25rem .75rem;
  border: 0;
}

#fourchanx-settings fieldset {
  padding: .5rem 1rem;
  border: 1px solid var(--base-grey);
  margin: 0 0 1rem;
}

#fourchanx-settings fieldset:last-of-type {
  margin-bottom: 0;
}

#fourchanx-settings legend {
  font-weight: 500;
  padding: 0 .5rem;
}

#fourchanx-settings kbd,
#fourchanx-settings code {
  color: var(--light-grey);
  background-color: var(--base-black);
  padding: .25rem;
}

#fourchanx-settings textarea {
  font-family: roboto mono;
  min-width: 100%;
  max-width: 100%;
}

#fourchanx-settings .section-container a {
  color: var(--base-primary);
}

/**
 * specific styling for the filter tab
 */

.section-filter ul {
  padding: 0;
}

.section-filter li {
  margin: 1rem 2rem;
}

.section-filter textarea {
  min-height: 25rem;
  margin-top: 1rem;
}

/**
 * specific styling for the sauce tab
 */

/*
#sauce-doc-expand:not(:checked) ~ #sauce-doc {
  max-height: 130px;
  overflow: auto;
}

#sauce-doc > label {
  float: right;
  margin: 0 5px;
}

#sauce-doc-expand + .riceCheck {
  display: none;
}
*/

.section-sauce ul {
  padding: 0;
  margin: 1rem 0;
  list-style: none;
}

.section-sauce li {
  padding-left: 1rem;
}

.section-sauce textarea {
  margin-top: 1rem;
  min-height: 20rem;
}

/**
 * specific styling for the advanced tab
 */

#archive-table {
  width: 100%;
}

#archive-table .archive-cell {
  text-align: center;
}

.section-advanced textarea {
  min-height: 5rem;
}

.section-advanced .note {
  font-size: .75rem;
  color: var(--base-grey);
  margin-left: 1rem;
}

.section-advanced ul {
  padding: 0;
  margin: 1rem 0;
  list-style: none;
}

.section-advanced li {
  padding-left: 1rem;
}

.favicon-preview > img:nth-of-type(3n+1) {
  margin-left: 1rem;
}

.section-keybinds .field {
  font-family: roboto mono;
}

/**
 * if an option has sub-options and isn't checked,
 * don't bother showing them
 */

div[data-checked='false'] > .suboption-list {
  display: none;
}

.section-main .description {
  color: var(--dark-grey);
}

/**
 * super fancy material checkboxes!
 */

.suboption-list {
  position: relative;
  margin-top: .25rem;
}

.suboption-list > div {
  margin-left: 1.5rem;
}

#fourchanx-settings div[data-checked] {
  margin-bottom: .25rem;
}

#fourchanx-settings .section-main label {
  position: relative;
  padding-left: 1.75rem;
  display: inline-block;
}

#fourchanx-settings .section-main input[type='checkbox'] {
  visibility: hidden;
  position: absolute;
  left: -99rem;
}

#fourchanx-settings .section-main div[data-checked] > label::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  width: 18px;
  height: 18px;
  z-index: 0;
  border: 2px solid #5a5a5a;
  border-radius: 1px;
  margin-top: 2px;
  transition: .2s;
}

#fourchanx-settings .section-main div[data-checked='true'] > label::before {
  top: -4px;
  left: -3px;
  width: 12px;
  height: 22px;
  border-top: 2px solid transparent;
  border-left: 2px solid transparent;
  border-right: 2px solid #26a69a;
  border-bottom: 2px solid #26a69a;
  transform: rotate(40deg);
  backface-visibility: hidden;
  transform-origin: 100% 100%;
}

/**
 * and super fancy material toggles!
 */

/*
.section-main > fieldset > div {
	margin-left: 4rem;
	margin-bottom: .5rem;
}

.section-main input[type='checkbox'] {
  visibility: hidden;
  position: absolute;
  left: -99rem;
}

.section-main label {
	font-weight: 500;
	position: relative;
}

.section-main label::before {
	content: '';
	display: inline-block;
	width: 3rem;
	height: 1rem;
	background-color: var(--dark-grey);
	border-radius: 1rem;
	transition: all .25s;
	position: absolute;
	left: -4rem;
	top: 1rem;
}

.section-main div[data-checked='true'] label::before {
	background-color: var(--light-primary);
}

.section-main label::after {
	content: '';
	background-color: var(--light-grey);
	display: inline-block;
	position: absolute;
	border-radius: 50%;
	transition: all .25s;
	width: 1.5rem;
	height: 1.5rem;
	left: -4.25rem;
	top: .75rem;
}

.section-main div[data-checked='true'] label::after {
	background-color: var(--base-primary);
	transform: translateX(2rem);
}

.description {
	display: block;
}

.suboption-list {
	margin-left: 4rem;
}
*/

/**
 * ccd0's 4chan x doesn't add unscroll to the body,
 * meaning you can awkwardly scroll when the settings
 * are open. so this actually does nothing
 */

.unscroll {
  overflow: hidden;
}

/**
 * 4chan x has an option to reveal and/or remove
 * spoilers; so we support that here
 */

:root.reveal-spoilers s,
:root.reveal-spoilers s > a {
  color: var(--base-white);
}

:root.reveal-spoilers .removed-spoiler::before {
  content: "[spoiler]";
}

:root.reveal-spoilers .removed-spoiler::after {
  content: "[/spoiler]";
}

/**
 * quick reply
 * first we hide a bunch crap (seriously, what the fuck),
 * then we'll style the actual qr
 */

/**
 * the qr is an absolute clusterfuck, so i will take the
 * time to explain what each of these declarations hide.
 * please note, lines with an asterisk override the matching 4chan x setting
 *
 * 01) the body of the qr when it is autohidden or isn't focused
 * 02) the checkbox to make it autohide (click the label/title)
 * 03)* the new thread options selector (just do it normally, lazy)
 * 04) the subject field when in a thread
 * 05)* the name field when board is forced anon (e.g. /b/)
 * 06)* the subject field when board is forced anon (e.g. /b/)
 * 07) the tag for flash files, when not on /f/
 * 08) the tag for flash files, when in a thread
 * 09) the mona font toggler, when not on /jp/
 * 10) the tex font toggler, when not on /sci/
 * 11) the textarea when previewing [math] on /sci/
 * 12) the preview of [math] when not previewing on /sci/
 * 13) the input in which you can edit the filename of a file, when no file
 * 14) (dump list) if only one post, hide the remove button
 * 15) (dump list) only hide the spoiler label for posts with files
 * 16) (dump list) hide the spoiler label for boards with no spoilers
 * 17) hides the spoiler option on boards with no spoilers
 * 18) hides the spoiler option, but only if post has no file
 * 19) hides paste area, but only if the post has a file
 * 20) hides url button, but only if the post has a file
 * 21) hides custom cooldown button, but only if a custom time hasn't been set
 */

#qr.autohide:not(.focus):not(:hover):not(:active) > form,
#autohide,
select[data-name='thread'],
#qr.reply-to-thread [name='sub'],
#qr.forced-anon [name='name'],
#qr.forced-anon [name='sub'],
body:not(.board_f) #qr [name='filetag'],
#qr.reply-to-thread [name='filetag'],
body:not(.board_jp) #sjis-toggle,
body:not(.board_sci) #tex-preview-button,
#qr.tex-preview .textarea > :not(#tex-preview),
#qr:not(.tex-preview) #tex-preview,
#qr-filename,
#file-n-submit.has-file #qr-no-file,
.qr-preview:only-of-type .remove,
.qr-preview:not(.has-file) label,
#qr:not(.has-spoiler) .qr-preview-spoiler,
#qr:not(.has-spoiler) #qr-spoiler-label,
#file-n-submit:not(.has-file) #qr-spoiler-label,
#file-n-submit.has-file #paste-area,
#file-n-submit.has-file #url-button,
#file-n-submit:not(.custom-cooldown) #custom-cooldown-button {
  display: none;
}

#qr {
  position: fixed;
  z-index: 10;
  background-color: var(--base-white);
  min-width: 30rem;
  max-width: 50rem;
  box-shadow: var(--default-depth);
  contain: paint;
}

#qr .move {
  color: var(--base-white);
  background-color: var(--base-primary);
  text-transform: lowercase;
  padding: 0 1rem;
  height: 3rem;
  line-height: 3rem;
}

#qr .move .close {
  font-size: 0;
}

#qr .move .close::after {
  float: right;
  height: 3rem;
  line-height: 3rem;
}

#qr form {
  padding: 1rem;
  max-height: 85vh;
  overflow-y: auto;
  overflow-x: hidden;
}

#qr .persona .field,
#qr .textarea .field {
  padding: .25rem;
  border: 1px solid var(--base-grey);
  margin: 0;
  transition: flex .25s, border-color .25s;
}

#qr .persona .field:focus,
#qr .textarea .field:focus {
  border-bottom-color: var(--base-primary);
}

#qr .persona {
  width: 100%;
  display: flex;
  margin-bottom: .75rem;
}

.persona button {
  color: var(--base-black);
  background: var(--light-grey);
  border: 0;
  margin-right: .5rem;
  transition: background .25s;
}

#qr.sjis-preview .persona button,
#qr.tex-preview .persona button {
  background: var(--base-grey);
}

/**
 * switch to mona font for the button and textarea
 * when previewed
 */

#sjis-toggle,
#qr.sjis-preview textarea {
  font-family: 'IPAMonaPGothic', 'Mona', 'MS PGothic', monospace;
}

#qr .persona .field {
  flex: 1;
}

#qr .persona .field:hover,
#qr .persona .field:focus {
  flex: 1.5;
}

#qr .persona .field:not(:first-of-type) {
  margin-left: .5rem;
}

body.board_b #qr .persona .field {
  margin-left: 0;
}

#tex-preview {
  white-space: pre-line;
}

#qr .textarea {
  position: relative;
}

#qr textarea {
  min-height: 10rem;
  min-width: 100%;
}

#qr #char-count {
  position: absolute;
  font-size: .75rem;
  right: .5rem;
  bottom: .5rem;
  pointer-events: none;
}

/**
 * dump list and dumping (multiple posts)
 */

#dump-list-container {
  display: none;
  position: relative;
  overflow-y: hidden;
  margin-top: .75rem;
}

#qr.dump #dump-list-container {
  display: block;
}

#dump-list {
  display: flex;
  flex-wrap: wrap;
  white-space: nowrap;
  overflow-y: auto;
  max-width: 28rem;
  max-height: 10rem;
}

.qr-preview {
  display: inline-block;
  cursor: move;
  height: 5rem;
  width: 5rem;
  opacity: .5;
  margin: .1rem;
  transition: opacity .25s, transform .25s;
  background-size: cover;
  overflow: hidden;
  position: relative;
  counter-increment: thumbnails;
}

.qr-preview::before {
  content: counter(thumbnails);
  font-size: .75rem;
  text-align: center;
  color: var(--base-white);
  position: absolute;
  top: 0;
  right: 0;
  background-color: rgba(33, 33, 33, .5);
  padding: 0 .25rem;
  min-width: 1.5rem;
  line-height: 1.5rem;
  height: 1.5rem;
}

.qr-preview:hover {
  opacity: .75;
}

#selected {
  opacity: 1;
}

.qr-preview.drag {
  transform: scale(.8);
}

.qr-preview.over {
  transform: scale(1.1);
}

.qr-preview .fa-times-circle::after {
  font-size: 1rem;
  color: var(--base-red);
  cursor: pointer;
  transition: color .25s;
}

.qr-preview .fa-times-circle:hover::after {
  color: var(--dark-red);
}

.qr-preview > span {
  color: var(--base-white);
}

/**
 * if a post preview in the dump list hasn't got a file,
 * make the text darker as opposed to lighter
 */

.qr-preview:not(.has-file) > span {
  color: var(--base-black);
}

.qr-preview-spoiler,
#add-post {
  font-size: 0;
}

.qr-preview > label {
  background: rgba(33, 33, 33, .5);
  color: var(--base-white);
  right: 0;
  bottom: 0;
  left: 0;
  position: absolute;
  text-align: center;
}

.qr-preview > label > input {
  margin: 0;
}

#add-post {
  position: absolute;
  right: 0;
  bottom: 0;
}

#add-post::after {
  cursor: pointer;
  font-size: 2rem;
}

#file-n-submit {
  display: flex;
  align-items: stretch;
  margin-top: .75rem;
}

#qr-file-button {
  text-transform: lowercase;
  background: var(--light-grey);
  padding: .25rem .5rem;
  border: 0;
  margin-right: .5rem;
  transition: background .25s;
}

#qr-file-button:hover,
#qr-file-button:focus {
  background: var(--base-grey);
}

#qr-filename-container {
  display: flex;
  flex: 1 1 auto;
  align-items: center;
  position: relative;
}

#qr-filename {
  background: none;
  padding: .25rem;
  border: 0;
}

#qr-no-file {
  cursor: pointer;
}

#qr-no-file,
.has-file #qr-filename {
  color: var(--base-grey);
  flex: 1 1 auto;
  display: inline-block;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

#qr-file-spoiler {
  position: absolute;
  opacity: 0;
  pointer-events: none;
}

.checkbox-letter {
  font-size: 0;
}

/**
 * specific styling for the icons in the file-n-submit area
 */

/**
#qr-oekaki-button .fa-edit::after { content: 'format_paint'; }
#qr-filerm .fa-times-circle::after { content: 'cancel'; }
#url-button .fa-link::after { content: 'link'; }
#paste-area::after { content: 'content_paste'; }
#custom-cooldown-button .fa-clock-o::after { content: 'timer'; }
#dump-button .fa-plus-square::after { content: 'add_box'; }
.qr-preview .fa-times-circle::after { content: 'cancel'; }
.qr-preview-spoiler::after { content: 'strikethrough_s'; }
#add-post::after { content: 'add_box'; }
*/

.checkbox-letter::after,
#qr-oekaki-button .fa-edit::after,
#qr-filerm .fa-times-circle::after,
#url-button .fa-link::after,
#paste-area::after,
#custom-cooldown-button .fa-clock-o::after,
#dump-button .fa-plus-square::after {
  line-height: 2rem;
  height: 2rem;
  cursor: pointer;
  opacity: .5;
  transition: opacity .25s;
  vertical-align: bottom;
  min-width: 1.5rem;
  margin-right: .25rem;
}

#qr-oekaki-button .fa-edit:hover::after,
#qr-filerm .fa-times-circle:hover::after,
#url-button .fa-link:hover::after,
#paste-area:hover::after,
#custom-cooldown-button .fa-clock-o:hover::after,
#dump-button .fa-plus-square:hover::after {
  opacity: .75;
}

#qr.dump #dump-button .fa-plus-square::after,
#qr-file-spoiler:checked + .checkbox-letter::after,
#custom-cooldown-button:not(.disabled) .fa-clock-o::after {
  opacity: .9;
}

#qr-filerm .fa-times-circle::after {
  color: var(--base-red);
}

#add-post::after,
#dump-button .fa-plus-square::after {
  color: var(--base-primary);
}

/**
 * if there is no file, don't show the 'remove file' icon
 */

#file-n-submit:not(.has-file) #qr-filerm {
  display: none;
}

#file-n-submit [type='submit'] {
  color: var(--base-white);
  text-transform: lowercase;
  background: var(--base-green);
  padding: .25rem .5rem;
  border: 0;
  margin-left: .5rem;
  transition: background .25s;
}

#file-n-submit [type='submit']:hover {
  background: var(--dark-green);
}

/**
 * visually hide the file input
 */

#qr [type='file'] {
  visibility: hidden;
  position: absolute;
}

/**
 * might as well attempt to make the filetag for /f/ look average
 */

#qr [name='filetag'] {
  margin-top: .75rem;
  width: 100%;
  padding: .25rem .5rem;
  border: 1px solid var(--base-grey);
}

/**
 * recaptcha and captcha related styling
 */

.captcha-counter {
  text-align: center;
}

.captcha-container > div {
  margin: auto;
}

/**
 * anti-autoplay audio, straight from 4chan X
 */

audio.controls-added {
  display: block;
  margin: auto;
}

:root.anti-autoplay div.embed {
  position: static;
  width: auto;
  height: auto;
  text-align: center;
}

:root.anti-autoplay .autoplay-removed {
  display: block !important;
  visibility: visible !important;
  min-width: 640px;
  min-height: 390px;
}

/**
 * embedding and floating embedder
 */

.embedder:not(.embedded) > span {
  display: none;
}

#embedding {
  position: fixed;
  background-color: var(--base-white);
  box-shadow: var(--default-depth);
  z-index: 10;
}

#embedding.empty {
  display: none;
}

#embedding > div:first-child {
  display: flex;
  color: var(--base-white);
  background-color: var(--base-primary);
  padding: 0 1rem;
  height: 3rem;
  line-height: 3rem;
}

#embedding .move {
  flex: 1;
}

#embedding .move::after {
  content: 'embedded content';
}

#embedding .jump,
#embedding .close {
  font-size: 0;
}

#embedding .jump::after,
#embedding .close::after {
  color: var(--base-white);
  line-height: 3rem;
  height: 3rem;
  padding: 0 .5rem;
  opacity: .65;
  transition: opacity .25s;
}

#embedding .jump:hover::after,
#embedding .close:hover::after {
  opacity: .85;
}

/**
 * filters and highlights
 */

/**
 * non-variable colours, i know. applicable here because
 * they are not used throughout the style and are, essentially,
 * a one time deal
 */

.post:target,
.highlight,
.qphl,
.yourPost .post,
:root.highlight-own .yourPost .stub {
  background-color: #fffde7;
}

.quotesYou .post {
  background-color: #fbe9e7;
}

.poster--admin .post {
  background-color: #ffebee;
}

.poster--mod .post {
  background-color: #f3e5f5;
}

.poster--dev .post {
  background-color: #e3f2fd;
}

.poster--manager .post {
  background-color: #fce4ec;
}

.poster--pass .post {
  background-color: #e8f5e9;
}

.identityIcon {
  vertical-align: baseline;
}

.file--video .fileThumb,
.file--gif .fileThumb {
  position: relative;
}

.file--video:not(.expanded-image) > .post > .file > .fileThumb::after,
.file--gif:not(.expanded-image) > .post > .file > .fileThumb::after {
  position: absolute;
  font-size: 4rem;
  line-height: 1;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  color: var(--base-white);
  background-color: rgba(33, 33, 33, .5);
  display: flex;
  align-items: center;
  justify-content: center;
  opacity: .75;
  transition: opacity .25s;
}

.file--video:not(.expanded-image) > .post > .file > .fileThumb:hover::after {
  opacity: .25;
}

.file--gif:not(.expanded-image) > .post > .file > .fileThumb::after {
  background-color: transparent;
  mix-blend-mode: difference;
}

.post--dubs .post {
  transform: perspective(1px) translateZ(0);
  /*}

.post--dubs .post:hover {*/
  animation: hvr-buzz .15s linear infinite;
}

.post--dubs .postNum a:nth-child(2n)::after {
  font-family: material icons;
  content: 'check';
  font-weight: normal;
  font-style: normal;
  font-size: 1rem;
  display: inline-block;
  text-transform: none;
  letter-spacing: normal;
  word-wrap: normal;
  white-space: nowrap;
  direction: ltr;
  -webkit-font-smoothing: antialiased;
  text-rendering: optimizeLegibility;
  -moz-osx-font-smoothing: grayscale;
  font-feature-settings: 'liga';
  color: var(--base-green);
  padding-left: .25rem;
}

@keyframes hvr-buzz {
  50% {
    transform: translateX(2px) rotate(.5deg);
  }

  100% {
    transform: translateX(-2px) rotate(-.5deg);
  }
}

.file--wide .full-image {
  display: block;
  width: 95vw;
  max-width: none !important;
  position: relative;
  margin: 0 calc(2rem + 15% * -1) 0 calc(2rem + 15% * -1);

  /*
	left: 50%;
	transform: translateX(-50%);
	*/
}

/**
 * birthday and christmas hats
 */

:root.hats-enabled .party-hat,
.is_thread .party-hat {
  position: absolute;
  pointer-events: none;
  margin-top: -5rem;
  z-index: 1;
}

/**
 * appchan's gallery mode, baked right into 4chan x.
 * first let's style the gallery container
 */

#a-gallery {
  position: fixed;
  display: flex;
  flex-direction: row;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  background-color: rgba(33, 33, 33, .5);
  z-index: 99;
}

/**
 * this is where images are kept
 */

.gal-viewport {
  display: flex;
  flex-direction: row;
  align-items: stretch;
  flex: 1 1 auto;
  overflow: hidden;
  position: relative;
}

.gal-buttons {
  position: absolute;
  color: var(--base-white);
  top: 2rem;
  right: 5rem;
}

.gal-close {
  font-size: 0;
}

.gal-buttons.gal-playing > .gal-start,
.gal-buttons:not(.gal-playing) > .gal-stop {
  display: none;
}

.gal-name {
  font-size: .9rem;
  position: absolute;
  color: var(--base-white);
  background-color: rgba(33, 33, 33, .5);
  padding: .25rem .5rem;
  bottom: 1rem;
  left: 50%;
  transform: translateX(-50%);
}

.gal-count {
  font-size: .75rem;
  color: var(--base-white);
  text-align: right;
  position: absolute;
  top: .5rem;
  right: 5rem;
  left: auto;
}

.gal-prev,
.gal-next {
  color: var(--base-white);
  display: flex;
  align-items: center;
  justify-content: center;
  cursor: pointer;
  transition: background-color .25s;
}

.gal-prev:hover,
.gal-next:hover {
  background-color: rgba(33, 33, 33, .5);
}

.gal-prev::after,
.gal-next::after {
  font-size: 3rem;
}

.gal-image {
  flex: 1 1 auto;
  display: flex;
  justify-content: space-around;
  overflow: hidden;
  width: 1%;
}

.gal-image a {
  margin: auto;
  line-height: 0;
  display: block;
  max-width: 100%;
}

.gal-fit-width .gal-image img,
.gal-fit-width .gal-image video {
  max-width: 100%;
}

/**
 * where the gallery thumbnails are located
 */

.gal-thumbnails {
  flex: 0 0 7rem;
  display: flex;
  flex-direction: column;
  align-items: center;
  overflow-x: hidden;
  border-left: 1px solid rgba(33, 33, 33, .5);
}

.gal-thumb {
  flex: 0 0 auto;
  margin: .5rem 0;
  display: inline-block;
  vertical-align: middle;
}

/**
 * give selected gallery thumbnail an outline
 */

.gal-highlight {
  outline: 1px solid var(--base-primary);
}

/**
 * gallery thumbnail styling
 */

.gal-thumb img,
.gal-thumb video {
  max-width: 5rem;
  width: auto;
  max-height: 5rem;
  height: auto;
}

/**
 * if selected in gallery, make fit height/width work
 */

:root.gal-pdf .gal-image a {
  width: 100%;
  height: 100%;
}

:root.gal-fit-width .gal-image img,
:root.gal-fit-width .gal-image video {
  max-width: 100%;
}

:root.gal-fit-height .gal-image img,
:root.gal-fit-height .gal-image video {
  /* XXX https://code.google.com/p/chromium/issues/detail?id=168840, https://bugs.webkit.org/show_bug.cgi?id=94158 */
  max-height: 95vh;
  max-height: calc(100vh - 25px);
}

.gal-image iframe {
  width: 100%;
  height: 100%;
}

/**
 * if gallery thumbnails are hidden, hide them
 */

:root.gal-hide-thumbnails .gal-thumbnails {
  display: none;
}

:root.gallery-open #header-bar {
  transform: translateY(-100%);
}

/**
 * media queries to accomodate for smaller screen sizes
 */

@media (max-width: 75rem) {
  #header-bar {
    padding: 0 .5rem;
  }

  #board-list a {
    font-size: .75rem;
    min-width: 1rem;
    padding: 0 .25rem;
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
  }

  .navLinks.json-index {
    max-width: 100%;
    margin: -4rem 1.5rem 5rem;
  }

  .thread {
    max-width: 100%;
  }

  #shortcuts .ss16-shortcut {
    display: inline-flex !important;
  }
}

/**
 * elements added by companion userscript
 */

#scroll-progress {
  position: absolute;
  top: 100%;
  left: 0;
  width: 100%;
  vertical-align: baseline;
  height: .25rem;
  background-color: var(--base-grey);
  border: 0;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  pointer-events: none;
  opacity: 0;
  will-change: opacity;
  transition: opacity .25s;
}

:root.bottom-header #scroll-progress {
  bottom: 100%;
  top: auto;
}

#header-bar.scrolled #scroll-progress {
  opacity: 1;
}

#scroll-progress::-webkit-progress-bar {
  background-color: var(--base-grey);
}

#scroll-progress::-webkit-progress-value {
  background-color: var(--base-green);
}

#scroll-progress::-moz-progress-bar {
  background-color: var(--base-green);
}

/**
 * sidedish wraps the number of replies and media objects in
 * a `<span>` element to make it bold
 */

.summary span {
  font-weight: 500;
}

/**
 * sidedish adds an additional shortcut, which isn't needed unless the
 * screen is <75rem
 */

#shortcuts .ss16-shortcut {
  display: none;
}

/**
 * when searching, create a 'focus' on the content by sliding in
 * a darker background
 */

:root.site-loading #id_css {
  display: none;
}

#id_css {
  display: block;
  height: 100vh;
  width: 100%;
  pointer-events: none;
  position: fixed;
  z-index: 1;
  top: 0;
  left: 0;
  transform: translateY(-100%);
  background-image: linear-gradient(to bottom, rgba(33, 33, 33, .75), rgba(33, 33, 33, 0));
  transition: transform .25s;
}

:root.is-searching #id_css {
  transform: translateY(0);
}

/**
 * in the event a search on the index provides no results,
 * display a handy empty state
 */

:root.is-searching .board:empty::after {
  content: 'No threads found; try searching again.';
  color: var(--base-grey);
  display: flex;
  align-items: center;
  justify-content: center;
  height: 40vh;
}

/**
 * sidedish makes the board links scrollable if they occupy too much horizontal space
 */

.scroll-indicator {
  position: absolute;
  top: 0;
  line-height: 64px;
  height: 64px;
  width: 48px;
  display: none;
  margin-right: 0;
  text-align: center;
  cursor: pointer;
  user-select: none;
}

.scroll-indicator--left {
  left: 0;
}

.scroll-indicator--right {
  right: 0;
}

:root.is-small-screen .scroll-indicator {
  display: block;
}

.scroll-indicator.disabled {
  opacity: .12;
  cursor: default;
}
/*
#board-list {
	overflow: hidden;
	position: absolute;
	height: 64px;
	width: 100%;
	bottom: 0;
	left: 0;
}

:root.is-small-screen #board-list {
	top: 0;
	bottom: auto;
	left: 48px;
	width: calc(100% - 2 * 48px);
	padding: 0!important;
}

#board-list > span:not([hidden]) {
	box-shadow: none!important;
	border: 0!important;
	width: 100%;
	height: 85px;
	flex-shrink: 0;
	padding: 0 16px 0 24px;
	overflow-x: auto;
	overflow-y: hidden;
	user-select: none;
	margin-bottom: -16px;
	display: flex;
	flex-wrap: nowrap;
	line-height: 64px;
}

:root.is-small-screen #board-list > span:not([hidden]) {
	padding: 0;
}

#board-list > span:not([hidden]) a {
	display: flex;
	flex-shrink: 0;
	height: 64px;
	line-height: 64px;
}

#shortcuts {
	display: none !important;
}
*/
/**
 * sidedish replaces the default `<select>` element with something
 * a tad more stylable
 */

.ss16-select-dropdown {
  text-transform: uppercase;
  display: block;
  overflow: hidden;
  height: 2rem;
  width: 8rem;
  padding: 0;
  border: 1px solid var(--base-white);
  margin: 0;
  list-style: none;
  position: relative;
  cursor: pointer;
}

.ss16-select-dropdown--item {
  position: absolute;
  width: 8rem;
  text-align: center;
  padding: .25rem .5rem;
  transform: translateY(100%);
  transition: transform .25s;
}

.ss16-select-dropdown--item.active {
  transform: translateY(0);
}

/**
 * tell oneechan users where to go;
 * now achieved via sidedish (poorly)
 */

/*
:root.oneechan body::before {
	content: 'Hey there Oneechan user!\AJust letting you know that ss16 does NOT work with this userscript!\APlease disable Oneechan to use this userstyle properly.\AIf you wish Oneechan worked with ss16, complain to me (sax) on GitHub.';
	display: flex;
	justify-content: center;
	align-items: center;
	height: 100vh;
	white-space: pre;
	font-size: 1.5rem;
	text-align: center;
}
*/

:root.oneechan .fa-gears::after {
  content: 'brush';
}

/**
 * if you need an anime girl following you as you browse 4chan,
 * seek professional mental help
 */

:root.oneechan #mascot {
  display: none;
}

/**
 * oneechan uses an imitation checkbox for posts to achieve nicer styling,
 * but since we don't use these checkboxes, they just create an unnecessary
 * newline due to being a block element
 */

:root.oneechan .riceCheck {
  display: none;
}
